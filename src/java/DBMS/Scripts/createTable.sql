DROP TABLE COORDINACION CASCADE;
DROP TABLE DECANATO CASCADE;
DROP TABLE PROFESOR CASCADE;
DROP TABLE USUARIO CASCADE;
DROP TABLE DACE CASCADE;
DROP TABLE CCT CASCADE;
DROP TABLE COOP CASCADE;
DROP TABLE PROY CASCADE;
DROP TABLE SINAI CASCADE;
DROP TABLE DEPARTAMENTO CASCADE;
DROP TABLE MATERIA CASCADE;
DROP TABLE dicta CASCADE;
DROP TABLE oferta CASCADE;
DROP TABLE pertenece CASCADE;
DROP TABLE suscribe CASCADE;
DROP TABLE se_adscribe CASCADE;
DROP TABLE maneja CASCADE;
DROP TABLE evaluar CASCADE;

CREATE TABLE COORDINACION (
    CODIGO VARCHAR(10) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL UNIQUE,
    
    CONSTRAINT PK_COORDINACION PRIMARY KEY (CODIGO)
);

CREATE TABLE DECANATO (
    CODIGO VARCHAR(10) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL UNIQUE,
    
    CONSTRAINT PK_DECANATO PRIMARY KEY (CODIGO)
);

CREATE TABLE PROFESOR (
    USBID VARCHAR(15) NOT NULL,
    NOMBRE VARCHAR(30) NOT NULL,
    APELLIDO VARCHAR(30) NOT NULL,
    CEDULA VARCHAR(9) NOT NULL,
    GENERO VARCHAR(9) NOT NULL,
    EMAIL VARCHAR(50) ,
    EMAIL_PERSONAL VARCHAR(50),
    NIVEL VARCHAR(20) ,
    JUBILADO VARCHAR(2) ,
    LAPSO_CONTRACTUAL_INICIO VARCHAR(10) ,
    LAPSO_CONTRACTUAL_FIN VARCHAR(10) ,
    
    CONSTRAINT PK_PROFESOR PRIMARY KEY (USBID)
);

CREATE TABLE USUARIO(
    USBID VARCHAR(15) NOT NULL,
    TIPOUSUARIO VARCHAR(20) DEFAULT 'profesor' NOT NULL,
    CONTRASENA VARCHAR(30) NOT NULL,

    CONSTRAINT PK_USUARIO PRIMARY KEY (USBID)
);

CREATE TABLE DACE (
    USBID VARCHAR(15) NOT NULL,
    CODIGO VARCHAR(6) NOT NULL,
    NOMBRE VARCHAR(25) NOT NULL,
    TRIMESTRE VARCHAR(10) NOT NULL,
    ANO NUMERIC(4) NOT NULL,
    UNO NUMERIC(3) DEFAULT 0 NOT NULL,
    DOS NUMERIC(3) DEFAULT 0 NOT NULL,
    TRES NUMERIC(3) DEFAULT 0 NOT NULL,
    CUATRO NUMERIC(3) DEFAULT 0 NOT NULL,
    CINCO NUMERIC(3) DEFAULT 0 NOT NULL,
    RETIRADOS NUMERIC(3) DEFAULT 0 NOT NULL,
    
    CONSTRAINT PK_DACE PRIMARY KEY (USBID,CODIGO,TRIMESTRE,ANO)
);

CREATE TABLE CCT(
    USBID VARCHAR(15) NOT NULL,
    IDENT VARCHAR(10) NOT NULL,
    TITULO VARCHAR(50) NOT NULL,
    FECHA_INIC DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    CARRERA VARCHAR(50) NOT NULL,
    TIPO VARCHAR(15) NOT NULL,
    
    CONSTRAINT PK_CCT PRIMARY KEY (IDENT)
);

CREATE TABLE COOP(
    IDENT VARCHAR(10) NOT NULL,
    USBID VARCHAR(15) NOT NULL,
    NOMBRE VARCHAR(20) NOT NULL,
    APELLIDO VARCHAR(20) NOT NULL,
    DURACION NUMERIC(3) NOT NULL,
    
    CONSTRAINT PK_COOP PRIMARY KEY (IDENT)
);

CREATE TABLE PROY (
    IDENT VARCHAR(10) NOT NULL,
    USBID VARCHAR(15) NOT NULL,
    NOMBRE VARCHAR(20) NOT NULL,
    APELLIDO VARCHAR(20) NOT NULL,
    
    CONSTRAINT PK_PROY PRIMARY KEY (IDENT,NOMBRE,APELLIDO)
);

CREATE TABLE SINAI (
    USBID VARCHAR(15) NOT NULL,
    NOMBRE VARCHAR(40) NOT NULL,
    FECHA_INIC DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    
    CONSTRAINT PK_SINAI PRIMARY KEY (USBID,NOMBRE)
);

CREATE TABLE DEPARTAMENTO (
    CODIGO VARCHAR(10) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL UNIQUE,
    CODIGO_MATERIAS VARCHAR(3) NOT NULL,

    CONSTRAINT PK_DEPARTAMENTO PRIMARY KEY (CODIGO)
);

CREATE TABLE MATERIA (
    CODIGO VARCHAR(10) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL UNIQUE,
    CREDITOS VARCHAR(2) NOT NULL,
    ESTADO VARCHAR(11) DEFAULT 'activo' NOT NULL,
    
    CONSTRAINT PK_MATERIA PRIMARY KEY (CODIGO)
);

CREATE TABLE dicta (
    USBID_PROFESOR VARCHAR(15) REFERENCES PROFESOR (USBID) ON DELETE CASCADE ON UPDATE CASCADE,
    CODIGO_MATERIA VARCHAR(10) REFERENCES MATERIA (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,

    CONSTRAINT PK_dicta PRIMARY KEY (USBID_PROFESOR,CODIGO_MATERIA)
);

CREATE TABLE se_adscribe (
    CODIGO_COORDINACION VARCHAR(10) REFERENCES COORDINACION (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,
    CODIGO_DEPARTAMENTO VARCHAR(10) REFERENCES DEPARTAMENTO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,

    CONSTRAINT PK_seadscribe PRIMARY KEY (CODIGO_COORDINACION,CODIGO_DEPARTAMENTO)
);

CREATE TABLE oferta (
    CODIGO_MATERIA VARCHAR(10) REFERENCES MATERIA (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,
    CODIGO_DEPARTAMENTO VARCHAR(10) NOT NULL REFERENCES DEPARTAMENTO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,

    CONSTRAINT PK_oferta PRIMARY KEY (CODIGO_MATERIA,CODIGO_DEPARTAMENTO)
);

CREATE TABLE pertenece ( 
    USBID_PROFESOR VARCHAR(10) REFERENCES PROFESOR (USBID) ON DELETE CASCADE ON UPDATE CASCADE,
    CODIGO_DEPARTAMENTO VARCHAR (10) REFERENCES DEPARTAMENTO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,

    CONSTRAINT PK_pertenece PRIMARY KEY (USBID_PROFESOR,CODIGO_DEPARTAMENTO)
);

CREATE TABLE suscribe (
    CODIGO_DEPARTAMENTO VARCHAR(10) REFERENCES DEPARTAMENTO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,
    CODIGO_DECANATO VARCHAR(10) NOT NULL REFERENCES DECANATO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,

    CONSTRAINT PK_suscribe PRIMARY KEY (CODIGO_DEPARTAMENTO)
);

CREATE TABLE maneja (
    CODIGO_COORDINACION VARCHAR(10) REFERENCES COORDINACION (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,
    CODIGO_MATERIA VARCHAR(10) REFERENCES MATERIA (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,

    CONSTRAINT PK_maneja PRIMARY KEY (CODIGO_COORDINACION,CODIGO_MATERIA)
);

CREATE TABLE evaluar (
    CODIGO_COORDINACION VARCHAR(10) REFERENCES COORDINACION (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,
    USBID_PROFESOR VARCHAR(10) REFERENCES PROFESOR (USBID) ON DELETE CASCADE ON UPDATE CASCADE,
    CODIGO_MATERIA VARCHAR(10) REFERENCES MATERIA (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE,

    CONSTRAINT PK_evaluar PRIMARY KEY (CODIGO_COORDINACION,USBID_PROFESOR,CODIGO_MATERIA)
);

ALTER TABLE PROFESOR ADD CONSTRAINT FK_profesor_usuario
    FOREIGN KEY (USBID) REFERENCES USUARIO (USBID);
    
ALTER TABLE DACE ADD CONSTRAINT FK_dace_profesor
    FOREIGN KEY (USBID) REFERENCES PROFESOR (USBID);
    
ALTER TABLE CCT ADD CONSTRAINT FK_cct_profesor
    FOREIGN KEY (USBID) REFERENCES PROFESOR (USBID);
    
ALTER TABLE COOP ADD CONSTRAINT FK_coop_cct
    FOREIGN KEY (IDENT) REFERENCES CCT (IDENT);
    
ALTER TABLE PROY ADD CONSTRAINT FK_proy_cct
    FOREIGN KEY (IDENT) REFERENCES CCT (IDENT);
    
ALTER TABLE SINAI ADD CONSTRAINT FK_sinai_profesor
    FOREIGN KEY (USBID) REFERENCES PROFESOR (USBID);